# To create workstation, run:
# scaletorch login -k <api_key>
# scaletorch ws create -c workstation.yml

# Name of the workstation - [Optional]
name: my-workstation

# Name of the requirements file - [Optional]
requirements: requirements.txt

# Number of GPUs needed in a workstation - [Default=0]
gpuCount: 1

# Minimum vCPUs and memory needed for the workstation - [Optional]
minvCPUs: 4
minMemory: 4

# Number of CPU only workstations needed - [Default=0]
# This field needs to be present only when CPU only workstations are needed
# maxCPUWorkers cannot be non-zero when gpuCount is non-zero
maxCPUWorkers: 0

# To store the artifacts (files,checkpoints) to be saved for a workstation - [Default=True]
saveArtifacts: True

# Creates a bare workstation with no dependencies or jupyter lab session when set to true - [Default=False]
bareBone: False

# Override what cloud providers and what GPU Types to be used for this workstation - [Optional] 
# By default scaletorch looks for cheapest compute in all the registered cloud providers
cloudProviders: 
  - name: AWS
    regions:
    - us-east-1

  - name: AZURE
    regions:
    - southcentralus
    
gpuTypes:
  - V100
  - K80

# How many workstations needed with the current config - [Default=1]
numWorkstations: int = 1

# Choose type of visualisation between TENSORBOARD and AIM - [Optional]
visualisation: TENSORBOARD

# List of commands that need to be run in the workstation before it is made available to use - [Optional]
# Note: Please avoid "sudo" in the commands
setupCommands: 
  - apt-get update -y
  - apt-get install net-tools -y

# What CUDA version to use - [Default=latest_cuda_cersion]
# Note: CUDA version will be ignored in the case of CPU only workstations
cuda: 11.6

# Utilize spot instances or not - [Default=False]
useSpot: False

# A custom docker image to use with pre-built dependencies
customImage: 
  image: registry/image:tag
  credentials:
    registry: <>
    username: <>
    password: <>

# Environment variables to be set on the workstation - [Optional]    
environment:
  YOUR_KEY: YOUR_VALUE